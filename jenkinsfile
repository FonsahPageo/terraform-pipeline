pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/FonsahPageo/terraform-pipeline.git']]])
            }
        }
        stage('Install Terraform') {
            steps {
                sh 'sudo apt-get update && apt-get install -y wget unzip' // Install required dependencies
                sh 'sudo wget https://releases.hashicorp.com/terraform/<terraform-version>/terraform_<terraform-version>_linux_amd64.zip' // Download Terraform binary
                sh 'sudo unzip terraform_<terraform-version>_linux_amd64.zip' // Unzip Terraform binary
                sh 'sudo mv terraform /usr/local/bin/' // Move Terraform binary to a directory in the system PATH
                sh 'terraform version' // Verify Terraform installation
            }
        }
        stage('Terraform Init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Terraform Plan') {
            steps {
                sh 'terraform plan'
            }
        }
        stage('Terraform Apply') {
            steps {
              //  input 'Deploy to AWS?'
                sh 'terraform apply -auto-approve'
            }
        }
        // stage('Terraform Destroy') {
        //     steps {
        //         script {
        //             dir('path/to/terraform/config') {
        //                 // Execute 'terraform destroy' to destroy the infrastructure
        //                 sh 'terraform destroy -auto-approve'
        //             }
        //         }
        //     }
        // }
    }
}




